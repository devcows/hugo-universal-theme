<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Go on Universal</title><link>https://devcows.github.io/hugo-universal-theme/tags/go/</link><description>Recent content in Go on Universal</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 17 Sep 2015 13:47:08 +0200</lastBuildDate><atom:link href="https://devcows.github.io/hugo-universal-theme/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>Go is for lovers</title><link>https://devcows.github.io/hugo-universal-theme/blog/2015/09/17/go-is-for-lovers/</link><pubDate>Thu, 17 Sep 2015 13:47:08 +0200</pubDate><guid>https://devcows.github.io/hugo-universal-theme/blog/2015/09/17/go-is-for-lovers/</guid><description>&lt;p>Hugo uses the excellent &lt;a href="http://golang.org/">go&lt;/a> &lt;a href="http://golang.org/pkg/html/template/">html/template&lt;/a> library for
its template engine. It is an extremely lightweight engine that provides a very
small amount of logic. In our experience that it is just the right amount of
logic to be able to create a good static website. If you have used other
template systems from different languages or frameworks you will find a lot of
similarities in go templates.&lt;/p>
&lt;p>This document is a brief primer on using go templates. The &lt;a href="http://golang.org/pkg/html/template/">go docs&lt;/a>
provide more details.&lt;/p></description></item></channel></rss>